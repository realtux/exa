"use strict";(self.webpackChunkdocs=self.webpackChunkdocs||[]).push([[724],{777:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"getting-started/docker","title":"docker","description":"exa.js is intended to be used with or without docker in both development and production. in either case it\'s useful to rely on configuration via .env for variables that differ between environments as a .env file can easily be made available to docker containers. configuration via config/master.js is useful for variables related to exa.js itself as well as variables that don\'t change between environments.","source":"@site/docs/getting-started/docker.md","sourceDirName":"getting-started","slug":"/getting-started/docker","permalink":"/getting-started/docker","draft":false,"unlisted":false,"editUrl":"https://github.com/facebook/docusaurus/tree/main/packages/create-docusaurus/templates/shared/docs/getting-started/docker.md","tags":[],"version":"current","sidebarPosition":3,"frontMatter":{"sidebar_position":3},"sidebar":"tutorialSidebar","previous":{"title":"project structure","permalink":"/getting-started/project-structure"},"next":{"title":"modules","permalink":"/category/modules"}}');var r=t(4848),s=t(8453);const i={sidebar_position:3},a="docker",c={},d=[{value:"compose file",id:"compose-file",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsx)(n.h1,{id:"docker",children:"docker"})}),"\n",(0,r.jsxs)(n.p,{children:["exa.js is intended to be used with or without docker in both development and production. in either case it's useful to rely on configuration via ",(0,r.jsx)(n.code,{children:".env"})," for variables that differ between environments as a ",(0,r.jsx)(n.code,{children:".env"})," file can easily be made available to docker containers. configuration via ",(0,r.jsx)(n.code,{children:"config/master.js"})," is useful for variables related to exa.js itself as well as variables that don't change between environments."]}),"\n",(0,r.jsx)(n.h2,{id:"compose-file",children:"compose file"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{className:"language-yaml",metastring:'title="docker-compose.yml"',children:'services:\n    app:\n        container_name: exa_app\n        image: node:20\n        tty: true\n        ports:\n            - "8118:8118"\n        volumes:\n            - .:/opt/src\n        working_dir: /opt/src\n        command: >\n            bash -c \'\n            if [ "$EXAENV" = "development" ]; then \n                npm i; npm run watch\n            else \n                npm i; npx --yes jmig migrate; npm start\n            fi\'\n        env_file:\n            - .env\n    console:\n        container_name: exa_console\n        image: node:20\n        tty: true\n        init: true\n        volumes:\n            - .:/opt/src\n        working_dir: /opt/src\n        env_file:\n            - .env\n        profiles:\n            - nostart\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},8453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>a});var o=t(6540);const r={},s=o.createContext(r);function i(e){const n=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(s.Provider,{value:n},e.children)}}}]);